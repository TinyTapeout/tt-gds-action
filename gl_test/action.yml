name: 'Tiny Tapeout Gate Level test'
description: 'This action will copy the GL netlist from the GDS action and run your testbench on it'
branding:
  color: purple
  icon: check
inputs:
  test-dir:
    description: 'The directory with the Makefile for running the tests'
    required: true
    default: 'test'

runs:
  using: 'composite'
  steps:
    - name: Download GDS artifact
      uses: actions/download-artifact@v4
      with:
        name: tt_submission

    - name: Set up environment variables
      working-directory: tt_submission
      shell: bash
      run: |
        # Defaults
        PDK=$(jq -r '.PDK' pdk.json)
        PDK_ROOT=/home/runner/pdk
        PDK_SOURCE=$(jq -r '.PDK_SOURCE' pdk.json)
        PDK_VERSION=$(jq -r '.PDK_VERSION' pdk.json)

        # PDK-specific overrides
        if [ "$PDK" == "ihp-sg13g2" ]; then
          PDK_ROOT=$GITHUB_WORKSPACE/pdk
        fi

        cat << __EOF >> $GITHUB_ENV
        PDK=$PDK
        PDK_ROOT=$PDK_ROOT
        PDK_SOURCE=$PDK_SOURCE
        PDK_VERSION=$PDK_VERSION
        __EOF

    - name: Install ${{ env.PDK }} PDK
      if: ${{ env.PDK_SOURCE == 'open_pdks' }}
      uses: TinyTapeout/ciel-action@v1
      with:
        pdk_name: ${{ env.PDK }}
        pdk_version: ${{ env.PDK_VERSION }}
        pdk_root: ${{ env.PDK_ROOT }}

    - name: Checkout IHP PDK repo
      if: ${{ env.PDK == 'ihp-sg13g2' }}
      uses: actions/checkout@v4
      with:
        repository: 'TinyTapeout/IHP-Open-PDK'
        ref: 'tt2025'
        path: pdk

    # Set Python up and install cocotb
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install cocotb (if required)
      if: ${{ hashFiles('test/requirements.txt') == '' }}
      shell: bash
      run: pip install cocotb==1.8.0

    - name: Install Python packages
      if: ${{ hashFiles('test/requirements.txt') != '' }}
      shell: bash
      run: pip install -r test/requirements.txt

    - name: Install iverilog
      shell: bash
      run: |
        wget https://github.com/TinyTapeout/iverilog/releases/download/13.0-git-d8c3c51/iverilog_13.0-git-d8c3c51a-1_amd64.deb
        sudo apt-get update -y
        sudo apt-get install -y ./iverilog_13.0-git-d8c3c51a-1_amd64.deb

    - name: Run tests
      shell: bash
      run: |
        cp tt_submission/*.v "${{ inputs.test-dir }}/gate_level_netlist.v"
        cd "${{ inputs.test-dir }}"
        rm -f tb.vcd results.xml
        make clean
        GATES=yes make

        # `make` will return success even if the tests fail, so check for failure in results.xml
        test -f results.xml
        ! grep failure results.xml

    - name: Upload VCD
      if: always()
      uses: actions/upload-artifact@v4
      with:
          name: gatelevel_test_vcd
          path: |
            ${{ inputs.test-dir }}/tb.vcd
            ${{ inputs.test-dir }}/results.xml
            ${{ inputs.test-dir }}/output/*

    - name: Test Summary
      if: always()
      uses: test-summary/action@v2.3
      with:
        paths: ${{ inputs.test-dir }}/results.xml
