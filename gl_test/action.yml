name: 'Tiny Tapeout Gate Level test'
description: 'This action will copy the GL netlist from the GDS action and run your testbench on it'
branding:
  color: purple
  icon: check
inputs:
  test-dir:
    description: 'The directory with the Makefile for running the tests'
    required: true
    default: 'test'
  pdk:
    description: 'PDK used for running GL tests'
    required: true
    type: choice
    options:
      - 'sky130'
      - 'ihp'

runs:
  using: 'composite'
  steps:
    - name: Download GDS artifact
      uses: actions/download-artifact@v4
      with:
        name: tt_submission

    - name: Set up environment variables
      shell: bash
      run: |
        PDK_CHOICE="${{ inputs.pdk }}"
        if [ "$PDK_CHOICE" == "sky130" ]; then
          sed 's/^ *//' << __EOF >> $GITHUB_ENV
            PDK_ROOT=/home/runner/pdk
            PDK=sky130A
            TT_ARGS=
        __EOF
        elif [ "$PDK_CHOICE" == "ihp" ]; then
          sed 's/^ *//' << __EOF >> $GITHUB_ENV
            PDK_ROOT=$GITHUB_WORKSPACE/pdk
            PDK=ihp-sg13g2
            TT_ARGS=--ihp
        __EOF
        fi

    - name: Install Sky130 PDK
      if: ${{ inputs.pdk == 'sky130' }}
      uses: TinyTapeout/volare-action@v2
      with:
        pdk_name: sky130
        pdk_version: cd1748bb197f9b7af62a54507de6624e30363943
        pdk_root: /home/runner/pdk

    - name: Checkout IHP PDK repo
      if: ${{ inputs.pdk == 'ihp' }}
      uses: actions/checkout@v4
      with:
        repository: 'TinyTapeout/IHP-Open-PDK'
        ref: 'tt2025'
        path: pdk

    # Set Python up and install cocotb
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install cocotb (if required)
      if: ${{ hashFiles('test/requirements.txt') == '' }}
      shell: bash
      run: pip install cocotb==1.8.0

    - name: Install Python packages
      if: ${{ hashFiles('test/requirements.txt') != '' }}
      shell: bash
      run: pip install -r test/requirements.txt

    - name: Install iverilog
      shell: bash
      run: |
        wget https://github.com/TinyTapeout/iverilog/releases/download/13.0-git-d8c3c51/iverilog_13.0-git-d8c3c51a-1_amd64.deb
        sudo apt-get update -y
        sudo apt-get install -y ./iverilog_13.0-git-d8c3c51a-1_amd64.deb

    - name: Run tests
      shell: bash
      run: |
        cp tt_submission/*.v "${{ inputs.test-dir }}/gate_level_netlist.v"
        cd "${{ inputs.test-dir }}"
        rm -f tb.vcd results.xml
        make clean
        GATES=yes make

        # `make` will return success even if the tests fail, so check for failure in results.xml
        test -f results.xml
        ! grep failure results.xml

    - name: Upload VCD
      if: always()
      uses: actions/upload-artifact@v4
      with:
          name: gatelevel_test_vcd
          path: |
            ${{ inputs.test-dir }}/tb.vcd
            ${{ inputs.test-dir }}/results.xml

    - name: Test Summary
      if: always()
      uses: test-summary/action@v2.3
      with:
        paths: ${{ inputs.test-dir }}/results.xml
