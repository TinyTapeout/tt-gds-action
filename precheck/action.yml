name: 'Tiny Tapeout Precheck'
description: 'This action runs DRC checks on the user projects prior to submission'
branding:
  color: purple
  icon: eye

inputs:
  tools-repo:
    description: 'Override tt-support-tools repository'
    default: 'TinyTapeout/tt-support-tools'
    required: false
    type: string
  tools-ref:
    description: 'Override tt-support-tools branch/tag/commit'
    default: 'tt07'
    required: false
    type: string

runs:
  using: 'composite'
  steps:
    - name: Set up environment variables
      shell: bash
      run: |
        cat << EOF >> $GITHUB_ENV
        PDK_ROOT=/home/runner/pdk
        PDK_VERSION=cd1748bb197f9b7af62a54507de6624e30363943
        EOF

    - name: Checkout tt-support-tools repo
      uses: actions/checkout@v4
      with:
        repository: "${{ inputs.tools-repo }}"
        path: tt
        ref: "${{ inputs.tools-ref }}"

    - name: Download GDS artifact
      uses: actions/download-artifact@v4
      with:
        name: tt_submission

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      shell: bash
      working-directory: tt/precheck
      run: pip install -r requirements.txt

    - name: Install Sky130 PDK
      uses: TinyTapeout/volare-action@v2
      with:
        pdk_name: sky130
        pdk_version: ${{ env.PDK_VERSION }}
        pdk_root: ${{ env.PDK_ROOT }}

    - name: Install Nix
      uses: rikhuijzer/cache-install@v1.1.4
      with:
        key: nix-${{ hashFiles('precheck/default.nix') }}
        nix_file: 'tt/precheck/default.nix'

    - name: Build Nix packages
      shell: bash
      working-directory: tt/precheck
      run: nix-build

    - name: Run precheck
      shell: bash
      working-directory: tt/precheck
      run: nix-shell --run "python precheck.py --gds ${{ github.workspace }}/tt_submission/*.gds"
    
    - name: Test Summary
      uses: test-summary/action@v2.3
      with:
        paths: "tt/precheck/reports/results.xml"
      if: always()

    - name: Capture test results
      shell: bash
      working-directory: tt/precheck
      if: always()
      run: cat reports/results.md >> $GITHUB_STEP_SUMMARY

    - name: Upload reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: precheck_reports
        path: tt/precheck/reports
